{"ast":null,"code":"var _jsxFileName = \"/Users/pranavi/Documents/Drone Project/droneproject/Frontend/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { GoogleMap, Polyline, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport './MapComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['drawing', 'places'];\nconst MapComponent = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  onDispatchDrone\n}, ref) => {\n  _s();\n  const [selectedArea, setSelectedArea] = useState(null);\n  const [drawingManager, setDrawingManager] = useState(null);\n  const [gridLines, setGridLines] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Add states for draggable camera feed\n  const [cameraPosition, setCameraPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const dragRef = useRef({\n    startX: 0,\n    startY: 0\n  });\n  const center = {\n    lat: 17.39716,\n    lng: 78.49040\n  };\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyB-6NuWru71NBpaRmAaiEZjRmTJnUfQBbQ',\n    libraries\n  });\n  const searchBoxRef = useRef(null);\n  const mapRef = useRef(null);\n  const autocompleteRef = useRef(null);\n\n  // Handle drag start\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    dragRef.current = {\n      startX: e.pageX - cameraPosition.x,\n      startY: e.pageY - cameraPosition.y\n    };\n    e.preventDefault();\n    e.stopPropagation(); // Prevent text selection while dragging\n  };\n\n  // Handle dragging\n  const handleMouseMove = useCallback(e => {\n    if (!isDragging) return;\n    const newX = e.pageX - dragRef.current.startX;\n    const newY = e.pageY - dragRef.current.startY;\n\n    // Get map container boundaries\n    const mapContainer = document.querySelector('.map-wrapper');\n    const cameraFeed = document.querySelector('.drone-camera-feed');\n    if (mapContainer && cameraFeed) {\n      const mapRect = mapContainer.getBoundingClientRect();\n      const feedRect = cameraFeed.getBoundingClientRect();\n\n      // Constrain within map boundaries\n      const maxX = mapRect.width - feedRect.width;\n      const maxY = mapRect.height - feedRect.height;\n      const minY = 70; // Minimum Y position to avoid search bar\n\n      setCameraPosition({\n        x: Math.min(Math.max(0, newX), maxX),\n        y: Math.min(Math.max(minY, newY), maxY)\n      });\n    }\n  }, [isDragging]);\n\n  // Handle drag end\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Add event listeners for dragging\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, handleMouseMove]);\n  useImperativeHandle(ref, () => ({\n    handleDispatchDrone: () => {\n      if (selectedArea) {\n        dispatchDroneToArea(selectedArea);\n      } else {\n        onDispatchDrone('Please select an area on the map first');\n      }\n    }\n  }));\n  const mapContainerStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  };\n  const mapOptions = {\n    zoom: 18,\n    center: center,\n    mapTypeId: 'satellite',\n    mapTypeControl: false,\n    streetViewControl: false,\n    fullscreenControl: true,\n    zoomControl: true\n  };\n  const onLoad = useCallback(map => {\n    if (typeof window !== 'undefined' && window.google && window.google.maps) {\n      const drawingManagerInstance = new window.google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: false\n      });\n      drawingManagerInstance.setMap(map);\n      setDrawingManager(drawingManagerInstance);\n\n      // Create custom buttons for \"Draw Rectangle\" and \"Stop Drawing\"\n      const drawRectangleButton = document.createElement('button');\n      drawRectangleButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"black\">\n        <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" />\n      </svg>`;\n      drawRectangleButton.className = 'custom-drawing-button';\n      const stopDrawingButton = document.createElement('button');\n      stopDrawingButton.innerHTML = '&#9995;';\n      stopDrawingButton.className = 'custom-drawing-button';\n      drawRectangleButton.addEventListener('click', () => {\n        drawingManagerInstance.setDrawingMode(window.google.maps.drawing.OverlayType.RECTANGLE);\n      });\n      stopDrawingButton.addEventListener('click', () => {\n        drawingManagerInstance.setDrawingMode(null);\n      });\n      const buttonContainer = document.createElement('div');\n      buttonContainer.className = 'custom-drawing-controls';\n      buttonContainer.appendChild(drawRectangleButton);\n      buttonContainer.appendChild(stopDrawingButton);\n      map.controls[window.google.maps.ControlPosition.RIGHT_TOP].push(buttonContainer);\n      window.google.maps.event.addListener(drawingManagerInstance, 'rectanglecomplete', rectangle => {\n        const bounds = rectangle.getBounds();\n        const selectedBounds = bounds.toJSON();\n        setSelectedArea(selectedBounds);\n        drawGrid(selectedBounds);\n      });\n    }\n  }, []);\n  const onUnmount = useCallback(() => {\n    if (drawingManager) {\n      drawingManager.setMap(null);\n    }\n  }, [drawingManager]);\n  const drawGrid = area => {\n    const gridLinesArray = [];\n    const latStep = (area.north - area.south) / 10;\n    const lngStep = (area.east - area.west) / 50;\n    for (let i = 0; i <= 50; i++) {\n      const lng = area.west + lngStep * i;\n      const latStart = area.south;\n      const latEnd = area.north;\n      gridLinesArray.push([{\n        lat: latStart,\n        lng\n      }, {\n        lat: latEnd,\n        lng\n      }]);\n    }\n    setGridLines(gridLinesArray);\n  };\n  const handleSearch = useCallback(() => {\n    if (typeof window !== 'undefined' && window.google && window.google.maps) {\n      if (searchBoxRef.current && !autocompleteRef.current) {\n        autocompleteRef.current = new window.google.maps.places.Autocomplete(searchBoxRef.current, {\n          types: ['geocode']\n        });\n        autocompleteRef.current.addListener('place_changed', () => {\n          const place = autocompleteRef.current.getPlace();\n          if (place.geometry) {\n            const {\n              lat,\n              lng\n            } = place.geometry.location;\n            setSelectedLocation({\n              lat: lat(),\n              lng: lng()\n            });\n            mapRef.current.panTo(place.geometry.location);\n            setSearchTerm('');\n          } else {\n            alert(\"No details available for the selected place.\");\n          }\n        });\n      }\n    }\n  }, []);\n  const handleSearchInputChange = e => {\n    setSearchTerm(e.target.value);\n    if (!autocompleteRef.current) {\n      handleSearch(); // Initialize Autocomplete only if not already set up\n    }\n  };\n  const dispatchDroneToArea = async area => {\n    try {\n      const requestData = {\n        top_left: {\n          latitude: parseFloat(area.north).toFixed(6),\n          longitude: parseFloat(area.west).toFixed(6)\n        },\n        bottom_right: {\n          latitude: parseFloat(area.south).toFixed(6),\n          longitude: parseFloat(area.east).toFixed(6)\n        }\n      };\n      const response = await axios.post('http://172.168.35.117:3001/drone/dispatch/rectangle', requestData);\n      console.log('Drone dispatched:', response.data);\n      onDispatchDrone('Drone successfully dispatched to the selected area');\n    } catch (error) {\n      console.error('Error dispatching drone:', error);\n      onDispatchDrone('Failed to dispatch drone: ' + error.message);\n    }\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-error\",\n      children: \"Error loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: \"Loading maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: searchBoxRef,\n      type: \"text\",\n      placeholder: \"Search a place\",\n      className: \"search-box\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drone-camera-feed\",\n      style: {\n        transform: `translate(${cameraPosition.x}px, ${cameraPosition.y}px)`,\n        cursor: isDragging ? 'grabbing' : 'grab'\n      },\n      onMouseDown: handleMouseDown,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-feed-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-feed-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"13\",\n              r: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), \"Drone Camera Feed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-feed-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"live-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"live-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), \"LIVE\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fullscreen-button\",\n            onClick: () => window.open('/camera-feed', '_blank'),\n            title: \"Open in fullscreen\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M15 3h6v6M14 10l7-7M9 21H3v-6M10 14l-7 7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-feed-content\",\n        children: \"Connecting to drone camera...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      ref: mapRef,\n      mapContainerStyle: mapContainerStyle,\n      options: mapOptions,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      center: selectedLocation || center,\n      children: gridLines.map((line, index) => /*#__PURE__*/_jsxDEV(Polyline, {\n        path: line,\n        options: {\n          strokeColor: '#00FF00',\n          strokeOpacity: 0.6,\n          strokeWeight: 2\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}, \"1qfp8V9dxUWFjhWCxYmLSqYib6I=\", false, function () {\n  return [useLoadScript];\n})), \"1qfp8V9dxUWFjhWCxYmLSqYib6I=\", false, function () {\n  return [useLoadScript];\n});\n_c2 = MapComponent;\nexport default MapComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapComponent$forwardRef\");\n$RefreshReg$(_c2, \"MapComponent\");","map":{"version":3,"names":["React","useState","useCallback","useRef","forwardRef","useImperativeHandle","GoogleMap","Polyline","useLoadScript","axios","jsxDEV","_jsxDEV","libraries","MapComponent","_s","_c","onDispatchDrone","ref","selectedArea","setSelectedArea","drawingManager","setDrawingManager","gridLines","setGridLines","selectedLocation","setSelectedLocation","searchTerm","setSearchTerm","cameraPosition","setCameraPosition","x","y","isDragging","setIsDragging","dragRef","startX","startY","center","lat","lng","isLoaded","loadError","googleMapsApiKey","searchBoxRef","mapRef","autocompleteRef","handleMouseDown","e","current","pageX","pageY","preventDefault","stopPropagation","handleMouseMove","newX","newY","mapContainer","document","querySelector","cameraFeed","mapRect","getBoundingClientRect","feedRect","maxX","width","maxY","height","minY","Math","min","max","handleMouseUp","useEffect","addEventListener","removeEventListener","handleDispatchDrone","dispatchDroneToArea","mapContainerStyle","position","top","left","right","bottom","mapOptions","zoom","mapTypeId","mapTypeControl","streetViewControl","fullscreenControl","zoomControl","onLoad","map","window","google","maps","drawingManagerInstance","drawing","DrawingManager","drawingMode","drawingControl","setMap","drawRectangleButton","createElement","innerHTML","className","stopDrawingButton","setDrawingMode","OverlayType","RECTANGLE","buttonContainer","appendChild","controls","ControlPosition","RIGHT_TOP","push","event","addListener","rectangle","bounds","getBounds","selectedBounds","toJSON","drawGrid","onUnmount","area","gridLinesArray","latStep","north","south","lngStep","east","west","i","latStart","latEnd","handleSearch","places","Autocomplete","types","place","getPlace","geometry","location","panTo","alert","handleSearchInputChange","target","value","requestData","top_left","latitude","parseFloat","toFixed","longitude","bottom_right","response","post","console","log","data","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","style","transform","cursor","onMouseDown","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","onClick","open","title","options","line","index","path","strokeColor","strokeOpacity","strokeWeight","_c2","$RefreshReg$"],"sources":["/Users/pranavi/Documents/Drone Project/droneproject/Frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useCallback, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { GoogleMap, Polyline, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport './MapComponent.css';\n\n\nconst libraries = ['drawing', 'places'];\n\nconst MapComponent = forwardRef(({ onDispatchDrone }, ref) => {\n  const [selectedArea, setSelectedArea] = useState(null);\n  const [drawingManager, setDrawingManager] = useState(null);\n  const [gridLines, setGridLines] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  // Add states for draggable camera feed\n  const [cameraPosition, setCameraPosition] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const dragRef = useRef({ startX: 0, startY: 0 });\n\n  const center = {\n    lat: 17.39716,\n    lng: 78.49040,\n  };\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyB-6NuWru71NBpaRmAaiEZjRmTJnUfQBbQ',\n    libraries,\n  });\n\n  const searchBoxRef = useRef(null);\n  const mapRef = useRef(null);\n  const autocompleteRef = useRef(null);\n\n  // Handle drag start\n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    dragRef.current = {\n      startX: e.pageX - cameraPosition.x,\n      startY: e.pageY - cameraPosition.y\n    };\n    e.preventDefault();\n    e.stopPropagation(); // Prevent text selection while dragging\n  };\n\n  // Handle dragging\nconst handleMouseMove = useCallback((e) => {\n  if (!isDragging) return;\n\n  const newX = e.pageX - dragRef.current.startX;\n  const newY = e.pageY - dragRef.current.startY;\n\n  // Get map container boundaries\n  const mapContainer = document.querySelector('.map-wrapper');\n  const cameraFeed = document.querySelector('.drone-camera-feed');\n  \n  if (mapContainer && cameraFeed) {\n    const mapRect = mapContainer.getBoundingClientRect();\n    const feedRect = cameraFeed.getBoundingClientRect();\n\n    // Constrain within map boundaries\n    const maxX = mapRect.width - feedRect.width;\n    const maxY = mapRect.height - feedRect.height;\n    const minY = 70; // Minimum Y position to avoid search bar\n\n    setCameraPosition({\n      x: Math.min(Math.max(0, newX), maxX),\n      y: Math.min(Math.max(minY, newY), maxY)\n    });\n  }\n}, [isDragging]);\n\n\n  \n  // Handle drag end\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Add event listeners for dragging\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, handleMouseMove]);\n\n  useImperativeHandle(ref, () => ({\n    handleDispatchDrone: () => {\n      if (selectedArea) {\n        dispatchDroneToArea(selectedArea);\n      } else {\n        onDispatchDrone('Please select an area on the map first');\n      }\n    }\n  }));\n\n  const mapContainerStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  };\n\n  const mapOptions = {\n    zoom: 18,\n    center: center,\n    mapTypeId: 'satellite',\n    mapTypeControl: false,\n    streetViewControl: false,\n    fullscreenControl: true,\n    zoomControl: true,\n  };\n\n  const onLoad = useCallback((map) => {\n    if (typeof window !== 'undefined' && window.google && window.google.maps) {\n      const drawingManagerInstance = new window.google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: false,\n      });\n  \n      drawingManagerInstance.setMap(map);\n      setDrawingManager(drawingManagerInstance);\n  \n      // Create custom buttons for \"Draw Rectangle\" and \"Stop Drawing\"\n      const drawRectangleButton = document.createElement('button');\n      drawRectangleButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"black\">\n        <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" />\n      </svg>`;\n      drawRectangleButton.className = 'custom-drawing-button';\n      \n      const stopDrawingButton = document.createElement('button');\n      stopDrawingButton.innerHTML = '&#9995;';\n      stopDrawingButton.className = 'custom-drawing-button';\n  \n      drawRectangleButton.addEventListener('click', () => {\n        drawingManagerInstance.setDrawingMode(window.google.maps.drawing.OverlayType.RECTANGLE);\n      });\n  \n      stopDrawingButton.addEventListener('click', () => {\n        drawingManagerInstance.setDrawingMode(null);\n      });\n  \n      const buttonContainer = document.createElement('div');\n      buttonContainer.className = 'custom-drawing-controls';\n      buttonContainer.appendChild(drawRectangleButton);\n      buttonContainer.appendChild(stopDrawingButton);\n  \n      map.controls[window.google.maps.ControlPosition.RIGHT_TOP].push(buttonContainer);\n  \n      window.google.maps.event.addListener(drawingManagerInstance, 'rectanglecomplete', (rectangle) => {\n        const bounds = rectangle.getBounds();\n        const selectedBounds = bounds.toJSON();\n        setSelectedArea(selectedBounds);\n        drawGrid(selectedBounds);\n      });\n    }\n  }, []);\n\n  const onUnmount = useCallback(() => {\n    if (drawingManager) {\n      drawingManager.setMap(null);\n    }\n  }, [drawingManager]);\n\n  const drawGrid = (area) => {\n    const gridLinesArray = [];\n    const latStep = (area.north - area.south) / 10;\n    const lngStep = (area.east - area.west) / 50;\n  \n    for (let i = 0; i <= 50; i++) {\n      const lng = area.west + lngStep * i;\n      const latStart = area.south;\n      const latEnd = area.north;\n  \n      gridLinesArray.push([\n        { lat: latStart, lng },\n        { lat: latEnd, lng }\n      ]);\n    }\n  \n    setGridLines(gridLinesArray);\n  };\n\n  const handleSearch = useCallback(() => {\n    if (typeof window !== 'undefined' && window.google && window.google.maps) {\n      if (searchBoxRef.current && !autocompleteRef.current) {\n        autocompleteRef.current = new window.google.maps.places.Autocomplete(\n          searchBoxRef.current,\n          { types: ['geocode'] }\n        );\n\n        autocompleteRef.current.addListener('place_changed', () => {\n          const place = autocompleteRef.current.getPlace();\n          if (place.geometry) {\n            const { lat, lng } = place.geometry.location;\n            setSelectedLocation({ lat: lat(), lng: lng() });\n            mapRef.current.panTo(place.geometry.location);\n            setSearchTerm('');\n          } else {\n            alert(\"No details available for the selected place.\");\n          }\n        });\n      }\n    }\n  }, []);\n\n  const handleSearchInputChange = (e) => {\n    setSearchTerm(e.target.value);\n    if (!autocompleteRef.current) {\n      handleSearch(); // Initialize Autocomplete only if not already set up\n    }\n  };\n\n  const dispatchDroneToArea = async (area) => {\n    try {\n      const requestData = {\n        top_left: {\n          latitude: parseFloat(area.north).toFixed(6),\n          longitude: parseFloat(area.west).toFixed(6),\n        },\n        bottom_right: {\n          latitude: parseFloat(area.south).toFixed(6),\n          longitude: parseFloat(area.east).toFixed(6),\n        },\n      };\n\n      const response = await axios.post('http://172.168.35.117:3001/drone/dispatch/rectangle', requestData);\n      console.log('Drone dispatched:', response.data);\n      onDispatchDrone('Drone successfully dispatched to the selected area');\n    } catch (error) {\n      console.error('Error dispatching drone:', error);\n      onDispatchDrone('Failed to dispatch drone: ' + error.message);\n    }\n  };\n\n  if (loadError) {\n    return <div className=\"map-error\">Error loading maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <div className=\"map-loading\">Loading maps...</div>;\n  }\n\n  return (\n    <div className=\"map-wrapper\">\n      <input\n        ref={searchBoxRef}\n        type=\"text\"\n        placeholder=\"Search a place\"\n        className=\"search-box\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n\n      {/* Draggable Drone Camera Feed */}\n      <div \n        className=\"drone-camera-feed\"\n        style={{\n          transform: `translate(${cameraPosition.x}px, ${cameraPosition.y}px)`,\n          cursor: isDragging ? 'grabbing' : 'grab'\n        }}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"camera-feed-header\">\n          <div className=\"camera-feed-title\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"/>\n              <circle cx=\"12\" cy=\"13\" r=\"4\"/>\n            </svg>\n            Drone Camera Feed\n          </div>\n          <div className=\"camera-feed-controls\">\n            <div className=\"live-indicator\">\n              <div className=\"live-dot\"></div>\n              LIVE\n            </div>\n            <button \n              className=\"fullscreen-button\"\n              onClick={() => window.open('/camera-feed', '_blank')}\n              title=\"Open in fullscreen\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M15 3h6v6M14 10l7-7M9 21H3v-6M10 14l-7 7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n        <div className=\"camera-feed-content\">\n          Connecting to drone camera...\n        </div>\n      </div>\n\n      <GoogleMap\n        ref={mapRef}\n        mapContainerStyle={mapContainerStyle}\n        options={mapOptions}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        center={selectedLocation || center}\n      >\n        {gridLines.map((line, index) => (\n          <Polyline\n            key={index}\n            path={line}\n            options={{\n              strokeColor: '#00FF00',\n              strokeOpacity: 0.6,\n              strokeWeight: 2,\n            }}\n          />\n        ))}\n      </GoogleMap>\n    </div>\n  );\n});\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}