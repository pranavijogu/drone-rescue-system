{"ast":null,"code":"var _jsxFileName = \"/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Initialize the map without setting any center or zoom\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        zoom: 13,\n        // Default zoom level\n        maxZoom: 18\n      });\n\n      // Add OpenStreetMap tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(mapInstanceRef.current);\n\n      // Fit the map to bounds or specify initial bounds if necessary\n      mapInstanceRef.current.fitWorld();\n\n      // Create a custom marker icon\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41]\n      });\n\n      // Add the marker to the initial location\n      markerRef.current = L.marker([0, 0], {\n        draggable: true,\n        icon: customIcon\n      }).addTo(mapInstanceRef.current);\n\n      // When the marker is dragged, update the latitude/longitude\n      markerRef.current.on('dragend', updateMarkerPosition);\n\n      // Handle map clicks to move the marker to the clicked location\n      mapInstanceRef.current.on('click', function (e) {\n        const {\n          lat,\n          lng\n        } = e.latlng;\n        console.log(\"Clicked at Lat:\", lat, \"Lng:\", lng); // Debugging\n        markerRef.current.setLatLng([lat, lng]); // Move the marker to the clicked position\n        updateMarkerPosition(); // Update the marker's position\n      });\n\n      // Function to resize the map when needed\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n      setTimeout(() => {\n        resizeMap();\n      }, 100);\n      window.addEventListener('resize', resizeMap);\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n\n  // Function to update the marker's position\n  const updateMarkerPosition = () => {\n    if (markerRef.current) {\n      const position = markerRef.current.getLatLng();\n      console.log(\"Marker moved to Lat:\", position.lat, \"Lng:\", position.lng); // Debugging\n      onLocationSelect(position.lat, position.lng); // Send lat/lng to parent\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    className: \"interactive-map\",\n    style: {\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"TAU93+9M3EppdaZi4r4rRcHvPFM=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","MapComponent","onLocationSelect","_s","mapContainerRef","mapInstanceRef","markerRef","current","map","zoom","maxZoom","tileLayer","attribution","addTo","fitWorld","customIcon","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","marker","draggable","on","updateMarkerPosition","e","lat","lng","latlng","console","log","setLatLng","resizeMap","invalidateSize","setTimeout","window","addEventListener","removeEventListener","remove","position","getLatLng","ref","className","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = ({ onLocationSelect }) => {\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Initialize the map without setting any center or zoom\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        zoom: 13, // Default zoom level\n        maxZoom: 18,\n      });\n\n      // Add OpenStreetMap tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors',\n      }).addTo(mapInstanceRef.current);\n\n      // Fit the map to bounds or specify initial bounds if necessary\n      mapInstanceRef.current.fitWorld();\n\n      // Create a custom marker icon\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41],\n      });\n\n      // Add the marker to the initial location\n      markerRef.current = L.marker([0, 0], { draggable: true, icon: customIcon })\n        .addTo(mapInstanceRef.current);\n\n      // When the marker is dragged, update the latitude/longitude\n      markerRef.current.on('dragend', updateMarkerPosition);\n\n      // Handle map clicks to move the marker to the clicked location\n      mapInstanceRef.current.on('click', function (e) {\n        const { lat, lng } = e.latlng;\n        console.log(\"Clicked at Lat:\", lat, \"Lng:\", lng); // Debugging\n        markerRef.current.setLatLng([lat, lng]); // Move the marker to the clicked position\n        updateMarkerPosition(); // Update the marker's position\n      });\n\n      // Function to resize the map when needed\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n\n      setTimeout(() => {\n        resizeMap();\n      }, 100);\n\n      window.addEventListener('resize', resizeMap);\n\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n\n  // Function to update the marker's position\n  const updateMarkerPosition = () => {\n    if (markerRef.current) {\n      const position = markerRef.current.getLatLng();\n      console.log(\"Marker moved to Lat:\", position.lat, \"Lng:\", position.lng); // Debugging\n      onLocationSelect(position.lat, position.lng); // Send lat/lng to parent\n    }\n  };\n\n  return <div ref={mapContainerRef} className=\"interactive-map\" style={{ height: '500px' }} />;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}