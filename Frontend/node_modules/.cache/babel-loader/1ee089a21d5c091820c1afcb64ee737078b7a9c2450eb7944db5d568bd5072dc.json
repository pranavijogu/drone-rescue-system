{"ast":null,"code":"var _jsxFileName = \"/Users/pranavi/Documents/Drone Project/droneproject/Frontend/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['drawing'];\nconst MapComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [drawingManager, setDrawingManager] = useState(null);\n\n  // Keshav Memorial Junior College coordinates\n  const center = {\n    lat: 17.3867,\n    lng: 78.4872\n  };\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'YOUR_API_KEY_HERE',\n    libraries\n  });\n  const mapContainerStyle = {\n    height: '500px',\n    width: '100%'\n  };\n\n  // Custom map styles to remove walking options\n  const mapOptions = {\n    zoom: 18,\n    // Higher zoom level for better initial view\n    center: center,\n    mapTypeControl: true,\n    streetViewControl: false,\n    // Disable street view\n    fullscreenControl: true,\n    zoomControl: true,\n    styles: [{\n      featureType: \"transit.station.bus\",\n      stylers: [{\n        visibility: \"off\"\n      }]\n    }, {\n      featureType: \"transit\",\n      stylers: [{\n        visibility: \"off\"\n      }]\n    }]\n  };\n  const onLoad = React.useCallback(map => {\n    setMap(map);\n\n    // Initialize DrawingManager with larger icons\n    const drawingManagerInstance = new window.google.maps.drawing.DrawingManager({\n      drawingMode: null,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: window.google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [window.google.maps.drawing.OverlayType.RECTANGLE, window.google.maps.drawing.OverlayType.POLYGON, window.google.maps.drawing.OverlayType.CIRCLE],\n        // Style the drawing control panel\n        style: {\n          transform: 'scale(1.5)',\n          // Make the entire control panel bigger\n          marginTop: '10px'\n        }\n      },\n      // Style options for the drawing tools\n      rectangleOptions: {\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        clickable: true,\n        editable: true,\n        zIndex: 1\n      },\n      polygonOptions: {\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        clickable: true,\n        editable: true,\n        zIndex: 1\n      },\n      circleOptions: {\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        clickable: true,\n        editable: true,\n        zIndex: 1\n      }\n    });\n\n    // Apply custom CSS to make drawing controls bigger\n    const cssStyles = `\n      .gm-style-mtc button,\n      .gmnoprint > div {\n        transform: scale(1.3) !important;\n        margin: 5px !important;\n      }\n    `;\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.innerText = cssStyles;\n    document.head.appendChild(styleSheet);\n    drawingManagerInstance.setMap(map);\n    setDrawingManager(drawingManagerInstance);\n\n    // Event listeners for shape completion\n    window.google.maps.event.addListener(drawingManagerInstance, 'rectanglecomplete', function (rectangle) {\n      const bounds = rectangle.getBounds();\n      console.log('Rectangle bounds:', bounds.toJSON());\n    });\n    window.google.maps.event.addListener(drawingManagerInstance, 'polygoncomplete', function (polygon) {\n      const coordinates = polygon.getPath().getArray().map(coord => ({\n        lat: coord.lat(),\n        lng: coord.lng()\n      }));\n      console.log('Polygon coordinates:', coordinates);\n    });\n    window.google.maps.event.addListener(drawingManagerInstance, 'circlecomplete', function (circle) {\n      const center = circle.getCenter();\n      const radius = circle.getRadius();\n      console.log('Circle center:', center.toJSON(), 'radius:', radius);\n    });\n  }, []);\n  const onUnmount = React.useCallback(map => {\n    setMap(null);\n    if (drawingManager) {\n      drawingManager.setMap(null);\n    }\n  }, [drawingManager]);\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-red-500\",\n      children: \"Error loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: \"Loading maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      options: mapOptions,\n      onLoad: onLoad,\n      onUnmount: onUnmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"njHd4Zm/eCSKBEZLOisk6XbfVAo=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","GoogleMap","useLoadScript","jsxDEV","_jsxDEV","libraries","MapComponent","_s","map","setMap","drawingManager","setDrawingManager","center","lat","lng","isLoaded","loadError","googleMapsApiKey","mapContainerStyle","height","width","mapOptions","zoom","mapTypeControl","streetViewControl","fullscreenControl","zoomControl","styles","featureType","stylers","visibility","onLoad","useCallback","drawingManagerInstance","window","google","maps","drawing","DrawingManager","drawingMode","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","OverlayType","RECTANGLE","POLYGON","CIRCLE","style","transform","marginTop","rectangleOptions","fillColor","fillOpacity","strokeWeight","clickable","editable","zIndex","polygonOptions","circleOptions","cssStyles","styleSheet","document","createElement","innerText","head","appendChild","event","addListener","rectangle","bounds","getBounds","console","log","toJSON","polygon","coordinates","getPath","getArray","coord","circle","getCenter","radius","getRadius","onUnmount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["/Users/pranavi/Documents/Drone Project/droneproject/Frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\n\nconst libraries = ['drawing'];\n\nconst MapComponent = () => {\n  const [map, setMap] = useState(null);\n  const [drawingManager, setDrawingManager] = useState(null);\n\n  // Keshav Memorial Junior College coordinates\n  const center = {\n    lat: 17.3867,\n    lng: 78.4872\n  };\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: 'YOUR_API_KEY_HERE',\n    libraries,\n  });\n\n  const mapContainerStyle = {\n    height: '500px',\n    width: '100%',\n  };\n\n  // Custom map styles to remove walking options\n  const mapOptions = {\n    zoom: 18, // Higher zoom level for better initial view\n    center: center,\n    mapTypeControl: true,\n    streetViewControl: false, // Disable street view\n    fullscreenControl: true,\n    zoomControl: true,\n    styles: [\n      {\n        featureType: \"transit.station.bus\",\n        stylers: [{ visibility: \"off\" }]\n      },\n      {\n        featureType: \"transit\",\n        stylers: [{ visibility: \"off\" }]\n      }\n    ]\n  };\n\n  const onLoad = React.useCallback((map) => {\n    setMap(map);\n    \n    // Initialize DrawingManager with larger icons\n    const drawingManagerInstance = new window.google.maps.drawing.DrawingManager({\n      drawingMode: null,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: window.google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [\n          window.google.maps.drawing.OverlayType.RECTANGLE,\n          window.google.maps.drawing.OverlayType.POLYGON,\n          window.google.maps.drawing.OverlayType.CIRCLE,\n        ],\n        // Style the drawing control panel\n        style: {\n          transform: 'scale(1.5)', // Make the entire control panel bigger\n          marginTop: '10px'\n        }\n      },\n      // Style options for the drawing tools\n      rectangleOptions: {\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        clickable: true,\n        editable: true,\n        zIndex: 1,\n      },\n      polygonOptions: {\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        clickable: true,\n        editable: true,\n        zIndex: 1,\n      },\n      circleOptions: {\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        clickable: true,\n        editable: true,\n        zIndex: 1,\n      }\n    });\n\n    // Apply custom CSS to make drawing controls bigger\n    const cssStyles = `\n      .gm-style-mtc button,\n      .gmnoprint > div {\n        transform: scale(1.3) !important;\n        margin: 5px !important;\n      }\n    `;\n    \n    const styleSheet = document.createElement(\"style\");\n    styleSheet.innerText = cssStyles;\n    document.head.appendChild(styleSheet);\n\n    drawingManagerInstance.setMap(map);\n    setDrawingManager(drawingManagerInstance);\n\n    // Event listeners for shape completion\n    window.google.maps.event.addListener(drawingManagerInstance, 'rectanglecomplete', function(rectangle) {\n      const bounds = rectangle.getBounds();\n      console.log('Rectangle bounds:', bounds.toJSON());\n    });\n\n    window.google.maps.event.addListener(drawingManagerInstance, 'polygoncomplete', function(polygon) {\n      const coordinates = polygon.getPath().getArray().map(coord => ({\n        lat: coord.lat(),\n        lng: coord.lng(),\n      }));\n      console.log('Polygon coordinates:', coordinates);\n    });\n\n    window.google.maps.event.addListener(drawingManagerInstance, 'circlecomplete', function(circle) {\n      const center = circle.getCenter();\n      const radius = circle.getRadius();\n      console.log('Circle center:', center.toJSON(), 'radius:', radius);\n    });\n  }, []);\n\n  const onUnmount = React.useCallback((map) => {\n    setMap(null);\n    if (drawingManager) {\n      drawingManager.setMap(null);\n    }\n  }, [drawingManager]);\n\n  if (loadError) {\n    return <div className=\"p-4 text-red-500\">Error loading maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <div className=\"p-4\">Loading maps...</div>;\n  }\n\n  return (\n    <div className=\"w-full\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        options={mapOptions}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      />\n    </div>\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}