{"ast":null,"code":"var _jsxFileName = \"/Users/pranavi/Documents/Drone Project/droneproject/Frontend/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport './MapComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['drawing'];\nconst MapComponent = ({\n  onDispatchDrone\n}) => {\n  _s();\n  const [selectedArea, setSelectedArea] = useState(null);\n  const [drawingManager, setDrawingManager] = useState(null);\n  const center = {\n    lat: 17.39716,\n    lng: 78.49040\n  };\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyB-6NuWru71NBpaRmAaiEZjRmTJnUfQBbQ',\n    libraries\n  });\n\n  // Remove fixed height, let container control the size\n  const mapContainerStyle = {\n    width: '100%',\n    height: '100%',\n    // This will make it fill the container\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  };\n  const mapOptions = {\n    zoom: 18,\n    center: center,\n    mapTypeId: 'satellite',\n    mapTypeControl: false,\n    streetViewControl: false,\n    fullscreenControl: true,\n    zoomControl: true\n  };\n\n  // Rest of your component code remains the same\n  const onLoad = useCallback(map => {\n    console.log(\"Map loaded\");\n    const drawingManagerInstance = new window.google.maps.drawing.DrawingManager({\n      drawingMode: null,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: window.google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [window.google.maps.drawing.OverlayType.RECTANGLE]\n      }\n    });\n    drawingManagerInstance.setMap(map);\n    setDrawingManager(drawingManagerInstance);\n    window.google.maps.event.addListener(drawingManagerInstance, 'rectanglecomplete', rectangle => {\n      const bounds = rectangle.getBounds();\n      const selectedBounds = bounds.toJSON();\n      setSelectedArea(selectedBounds);\n    });\n  }, []);\n  const handleDispatchDrone = async () => {\n    if (selectedArea) {\n      try {\n        const requestData = {\n          top_left: {\n            latitude: parseFloat(selectedArea.north).toFixed(6),\n            longitude: parseFloat(selectedArea.west).toFixed(6)\n          },\n          bottom_right: {\n            latitude: parseFloat(selectedArea.south).toFixed(6),\n            longitude: parseFloat(selectedArea.east).toFixed(6)\n          }\n        };\n        const response = await axios.post('http://172.168.0.157:3001/drone/dispatch/rectangle', requestData);\n        console.log('Drone dispatched:', response.data);\n      } catch (error) {\n        console.error('Error dispatching drone:', error);\n        alert('Failed to dispatch drone');\n      }\n    } else {\n      alert('No area selected');\n    }\n  };\n  const onUnmount = useCallback(() => {\n    if (drawingManager) {\n      drawingManager.setMap(null);\n    }\n  }, [drawingManager]);\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-error\",\n      children: \"Error loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: \"Loading maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      options: mapOptions,\n      onLoad: onLoad,\n      onUnmount: onUnmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), selectedArea && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDispatchDrone,\n      className: \"dispatch-button\",\n      children: \"Dispatch Drone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"+Q8VqkCMU+iilQC6c+orm8gCeUk=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useCallback","GoogleMap","useLoadScript","axios","jsxDEV","_jsxDEV","libraries","MapComponent","onDispatchDrone","_s","selectedArea","setSelectedArea","drawingManager","setDrawingManager","center","lat","lng","isLoaded","loadError","googleMapsApiKey","mapContainerStyle","width","height","position","top","left","right","bottom","mapOptions","zoom","mapTypeId","mapTypeControl","streetViewControl","fullscreenControl","zoomControl","onLoad","map","console","log","drawingManagerInstance","window","google","maps","drawing","DrawingManager","drawingMode","drawingControl","drawingControlOptions","ControlPosition","TOP_CENTER","drawingModes","OverlayType","RECTANGLE","setMap","event","addListener","rectangle","bounds","getBounds","selectedBounds","toJSON","handleDispatchDrone","requestData","top_left","latitude","parseFloat","north","toFixed","longitude","west","bottom_right","south","east","response","post","data","error","alert","onUnmount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onClick","_c","$RefreshReg$"],"sources":["/Users/pranavi/Documents/Drone Project/droneproject/Frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport './MapComponent.css';\n\nconst libraries = ['drawing'];\n\nconst MapComponent = ({ onDispatchDrone }) => {\n  const [selectedArea, setSelectedArea] = useState(null);\n  const [drawingManager, setDrawingManager] = useState(null);\n\n  const center = {\n    lat: 17.39716,\n    lng: 78.49040,\n  };\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyB-6NuWru71NBpaRmAaiEZjRmTJnUfQBbQ',\n    libraries,\n  });\n\n  // Remove fixed height, let container control the size\n  const mapContainerStyle = {\n    width: '100%',\n    height: '100%', // This will make it fill the container\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  };\n\n  const mapOptions = {\n    zoom: 18,\n    center: center,\n    mapTypeId: 'satellite',\n    mapTypeControl: false,\n    streetViewControl: false,\n    fullscreenControl: true,\n    zoomControl: true,\n  };\n\n  // Rest of your component code remains the same\n  const onLoad = useCallback((map) => {\n    console.log(\"Map loaded\");\n\n    const drawingManagerInstance = new window.google.maps.drawing.DrawingManager({\n      drawingMode: null,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: window.google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [\n          window.google.maps.drawing.OverlayType.RECTANGLE,\n        ],\n      },\n    });\n\n    drawingManagerInstance.setMap(map);\n    setDrawingManager(drawingManagerInstance);\n\n    window.google.maps.event.addListener(drawingManagerInstance, 'rectanglecomplete', (rectangle) => {\n      const bounds = rectangle.getBounds();\n      const selectedBounds = bounds.toJSON();\n      setSelectedArea(selectedBounds);\n    });\n  }, []);\n\n  const handleDispatchDrone = async () => {\n    if (selectedArea) {\n      try {\n        const requestData = {\n          top_left: {\n            latitude: parseFloat(selectedArea.north).toFixed(6),\n            longitude: parseFloat(selectedArea.west).toFixed(6),\n          },\n          bottom_right: {\n            latitude: parseFloat(selectedArea.south).toFixed(6),\n            longitude: parseFloat(selectedArea.east).toFixed(6),\n          },\n        };\n        \n        const response = await axios.post('http://172.168.0.157:3001/drone/dispatch/rectangle', requestData);\n        console.log('Drone dispatched:', response.data);\n      } catch (error) {\n        console.error('Error dispatching drone:', error);\n        alert('Failed to dispatch drone');\n      }\n    } else {\n      alert('No area selected');\n    }\n  };\n\n  const onUnmount = useCallback(() => {\n    if (drawingManager) {\n      drawingManager.setMap(null);\n    }\n  }, [drawingManager]);\n\n  if (loadError) {\n    return <div className=\"map-error\">Error loading maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <div className=\"map-loading\">Loading maps...</div>;\n  }\n\n  return (\n    <div className=\"map-wrapper\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        options={mapOptions}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      />\n      {selectedArea && (\n        <button onClick={handleDispatchDrone} className=\"dispatch-button\">\n          Dispatch Drone\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}