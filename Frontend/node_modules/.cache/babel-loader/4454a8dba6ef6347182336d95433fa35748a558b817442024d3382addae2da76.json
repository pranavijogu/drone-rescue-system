{"ast":null,"code":"var _jsxFileName = \"/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n\n  // State to hold latitude and longitude\n  const [lat, setLat] = useState(17.397194281352338); // Default latitude\n  const [lng, setLng] = useState(78.49024767779724); // Default longitude\n\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Initialize map with center and zoom\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        center: [lat, lng],\n        zoom: 17,\n        maxZoom: 18\n      });\n\n      // Add tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(mapInstanceRef.current);\n\n      // Create and set marker at the initial position\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41]\n      });\n      markerRef.current = L.marker([lat, lng], {\n        draggable: true,\n        icon: customIcon\n      }).addTo(mapInstanceRef.current);\n\n      // When the marker is dragged, update its position\n      markerRef.current.on('dragend', updateMarkerPosition);\n\n      // Handle map click event and move the marker\n      mapInstanceRef.current.on('click', function (e) {\n        console.log(\"Clicked at Lat:\", e.latlng.lat, \"Lng:\", e.latlng.lng); // Debugging information\n        const {\n          lat,\n          lng\n        } = e.latlng;\n        markerRef.current.setLatLng([lat, lng]); // Move marker to clicked location\n        updateMarkerPosition(); // Update the marker's position\n      });\n\n      // Ensure the map resizes correctly\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n      setTimeout(() => {\n        resizeMap();\n      }, 100);\n      window.addEventListener('resize', resizeMap);\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n\n  // Function to update the marker's position\n  const updateMarkerPosition = () => {\n    if (markerRef.current) {\n      const position = markerRef.current.getLatLng();\n      console.log(\"Marker moved to Lat:\", position.lat, \"Lng:\", position.lng); // Debugging information\n      setLat(position.lat);\n      setLng(position.lng);\n      onLocationSelect(position.lat, position.lng); // Callback function to handle lat/lng\n    }\n  };\n\n  // Function to handle input change for latitude\n  const handleLatChange = e => {\n    const newLat = parseFloat(e.target.value);\n    if (!isNaN(newLat)) {\n      setLat(newLat);\n      markerRef.current.setLatLng([newLat, lng]); // Update marker position\n      mapInstanceRef.current.setView([newLat, lng]); // Center map on new lat\n    }\n  };\n\n  // Function to handle input change for longitude\n  const handleLngChange = e => {\n    const newLng = parseFloat(e.target.value);\n    if (!isNaN(newLng)) {\n      setLng(newLng);\n      markerRef.current.setLatLng([lat, newLng]); // Update marker position\n      mapInstanceRef.current.setView([lat, newLng]); // Center map on new lng\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"interactive-map\",\n      style: {\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: lat,\n        onChange: handleLatChange,\n        placeholder: \"Latitude\",\n        step: \"0.000001\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: lng,\n        onChange: handleLngChange,\n        placeholder: \"Longitude\",\n        step: \"0.000001\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"2muXi9n2mAv/faOKmT3KqrrYe5Q=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","MapComponent","onLocationSelect","_s","mapContainerRef","mapInstanceRef","markerRef","lat","setLat","lng","setLng","current","map","center","zoom","maxZoom","tileLayer","attribution","addTo","customIcon","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","marker","draggable","on","updateMarkerPosition","e","console","log","latlng","setLatLng","resizeMap","invalidateSize","setTimeout","window","addEventListener","removeEventListener","remove","position","getLatLng","handleLatChange","newLat","parseFloat","target","value","isNaN","setView","handleLngChange","newLng","children","ref","className","style","height","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","type","onChange","placeholder","step","_c","$RefreshReg$"],"sources":["/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = ({ onLocationSelect }) => {\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n\n  // State to hold latitude and longitude\n  const [lat, setLat] = useState(17.397194281352338); // Default latitude\n  const [lng, setLng] = useState(78.49024767779724); // Default longitude\n\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Initialize map with center and zoom\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        center: [lat, lng],\n        zoom: 17,\n        maxZoom: 18,\n      });\n\n      // Add tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors',\n      }).addTo(mapInstanceRef.current);\n\n      // Create and set marker at the initial position\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41],\n      });\n\n      markerRef.current = L.marker([lat, lng], {\n        draggable: true,\n        icon: customIcon,\n      }).addTo(mapInstanceRef.current);\n\n      // When the marker is dragged, update its position\n      markerRef.current.on('dragend', updateMarkerPosition);\n\n      // Handle map click event and move the marker\n      mapInstanceRef.current.on('click', function (e) {\n        console.log(\"Clicked at Lat:\", e.latlng.lat, \"Lng:\", e.latlng.lng); // Debugging information\n        const { lat, lng } = e.latlng;\n        markerRef.current.setLatLng([lat, lng]); // Move marker to clicked location\n        updateMarkerPosition(); // Update the marker's position\n      });\n\n      // Ensure the map resizes correctly\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n\n      setTimeout(() => {\n        resizeMap();\n      }, 100);\n\n      window.addEventListener('resize', resizeMap);\n\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n\n  // Function to update the marker's position\n  const updateMarkerPosition = () => {\n    if (markerRef.current) {\n      const position = markerRef.current.getLatLng();\n      console.log(\"Marker moved to Lat:\", position.lat, \"Lng:\", position.lng); // Debugging information\n      setLat(position.lat);\n      setLng(position.lng);\n      onLocationSelect(position.lat, position.lng); // Callback function to handle lat/lng\n    }\n  };\n\n  // Function to handle input change for latitude\n  const handleLatChange = (e) => {\n    const newLat = parseFloat(e.target.value);\n    if (!isNaN(newLat)) {\n      setLat(newLat);\n      markerRef.current.setLatLng([newLat, lng]); // Update marker position\n      mapInstanceRef.current.setView([newLat, lng]); // Center map on new lat\n    }\n  };\n\n  // Function to handle input change for longitude\n  const handleLngChange = (e) => {\n    const newLng = parseFloat(e.target.value);\n    if (!isNaN(newLng)) {\n      setLng(newLng);\n      markerRef.current.setLatLng([lat, newLng]); // Update marker position\n      mapInstanceRef.current.setView([lat, newLng]); // Center map on new lng\n    }\n  };\n\n  return (\n    <div>\n      <div ref={mapContainerRef} className=\"interactive-map\" style={{ height: '500px' }} />\n      <div style={{ marginTop: '10px' }}>\n        <input\n          type=\"number\"\n          value={lat}\n          onChange={handleLatChange}\n          placeholder=\"Latitude\"\n          step=\"0.000001\"\n        />\n        <input\n          type=\"number\"\n          value={lng}\n          onChange={handleLngChange}\n          placeholder=\"Longitude\"\n          step=\"0.000001\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}