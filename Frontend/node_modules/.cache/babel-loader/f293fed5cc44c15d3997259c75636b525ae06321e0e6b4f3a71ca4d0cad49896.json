{"ast":null,"code":"var _jsxFileName = \"/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [mapReady, setMapReady] = useState(false);\n  const [markerPosition, setMarkerPosition] = useState([17.397194281352338, 78.49024767779724]);\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Set the map center to Hyderabad, Telangana\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        center: markerPosition,\n        zoom: 17,\n        // Closer zoom\n        maxZoom: 18\n      });\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(mapInstanceRef.current);\n\n      // Create a custom red icon for the marker\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41]\n      });\n\n      // Place the marker at the initial coordinates and make it draggable\n      markerRef.current = L.marker(markerPosition, {\n        draggable: true,\n        icon: customIcon\n      }).addTo(mapInstanceRef.current);\n\n      // Attach the drag event to the marker to capture new lat/lng on drag end\n      markerRef.current.on('dragend', event => {\n        const marker = event.target;\n        const position = marker.getLatLng();\n        setMarkerPosition([position.lat, position.lng]);\n        onLocationSelect(position.lat, position.lng);\n      });\n\n      // Update the marker position when the user clicks on the map\n      mapInstanceRef.current.on('click', e => {\n        const {\n          lat,\n          lng\n        } = e.latlng;\n        markerRef.current.setLatLng([lat, lng]); // Update marker's position\n        setMarkerPosition([lat, lng]);\n        onLocationSelect(lat, lng);\n      });\n\n      // Handle map resize for responsiveness\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n      setTimeout(() => {\n        resizeMap();\n        setMapReady(true);\n      }, 100);\n      window.addEventListener('resize', resizeMap);\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    className: \"interactive-map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"Kd1Mrf90gR0TBykod1PBlluplJk=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","MapComponent","onLocationSelect","_s","mapContainerRef","mapInstanceRef","markerRef","mapReady","setMapReady","markerPosition","setMarkerPosition","current","map","center","zoom","maxZoom","tileLayer","attribution","addTo","customIcon","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","marker","draggable","on","event","target","position","getLatLng","lat","lng","e","latlng","setLatLng","resizeMap","invalidateSize","setTimeout","window","addEventListener","removeEventListener","remove","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = ({ onLocationSelect }) => {\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [mapReady, setMapReady] = useState(false);\n  const [markerPosition, setMarkerPosition] = useState([17.397194281352338, 78.49024767779724]);\n\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Set the map center to Hyderabad, Telangana\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        center: markerPosition,\n        zoom: 17, // Closer zoom\n        maxZoom: 18,\n      });\n\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors',\n      }).addTo(mapInstanceRef.current);\n\n      // Create a custom red icon for the marker\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41],\n      });\n\n      // Place the marker at the initial coordinates and make it draggable\n      markerRef.current = L.marker(markerPosition, {\n        draggable: true,\n        icon: customIcon,\n      }).addTo(mapInstanceRef.current);\n\n      // Attach the drag event to the marker to capture new lat/lng on drag end\n      markerRef.current.on('dragend', (event) => {\n        const marker = event.target;\n        const position = marker.getLatLng();\n        setMarkerPosition([position.lat, position.lng]);\n        onLocationSelect(position.lat, position.lng);\n      });\n\n      // Update the marker position when the user clicks on the map\n      mapInstanceRef.current.on('click', (e) => {\n        const { lat, lng } = e.latlng;\n        markerRef.current.setLatLng([lat, lng]); // Update marker's position\n        setMarkerPosition([lat, lng]);\n        onLocationSelect(lat, lng);\n      });\n\n      // Handle map resize for responsiveness\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n\n      setTimeout(() => {\n        resizeMap();\n        setMapReady(true);\n      }, 100);\n\n      window.addEventListener('resize', resizeMap);\n\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n\n  return <div ref={mapContainerRef} className=\"interactive-map\" />;\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}