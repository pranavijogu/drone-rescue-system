{"ast":null,"code":"var _jsxFileName = \"/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect,\n  initialLatitude = 17.397194281352338,\n  initialLongitude = 78.49024767779724\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [mapReady, setMapReady] = useState(false);\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Set the map center to the initial coordinates (Hyderabad, Telangana in this case)\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        center: [initialLatitude, initialLongitude],\n        zoom: 13,\n        maxZoom: 18\n      });\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(mapInstanceRef.current);\n\n      // Create a custom red icon for the marker\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41]\n      });\n\n      // Add marker at initial coordinates\n      markerRef.current = L.marker([initialLatitude, initialLongitude], {\n        draggable: true,\n        icon: customIcon\n      }).addTo(mapInstanceRef.current).on('dragend', updateMarkerPosition);\n\n      // Handle map click to move the marker\n      mapInstanceRef.current.on('click', e => {\n        const {\n          lat,\n          lng\n        } = e.latlng;\n        if (markerRef.current) {\n          markerRef.current.setLatLng([lat, lng]);\n          updateMarkerPosition();\n        }\n      });\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n      setTimeout(() => {\n        resizeMap();\n        setMapReady(true);\n      }, 100);\n      window.addEventListener('resize', resizeMap);\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n  const updateMarkerPosition = () => {\n    if (markerRef.current) {\n      const position = markerRef.current.getLatLng();\n      onLocationSelect(position.lat, position.lng);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    className: \"interactive-map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"9woNiTF/Mtq7wx/3o32lY//zJE0=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","MapComponent","onLocationSelect","initialLatitude","initialLongitude","_s","mapContainerRef","mapInstanceRef","markerRef","mapReady","setMapReady","current","map","center","zoom","maxZoom","tileLayer","attribution","addTo","customIcon","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","marker","draggable","on","updateMarkerPosition","e","lat","lng","latlng","setLatLng","resizeMap","invalidateSize","setTimeout","window","addEventListener","removeEventListener","remove","position","getLatLng","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pranavi/Documents/Drone Project/droneproject/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = ({ onLocationSelect, initialLatitude = 17.397194281352338, initialLongitude = 78.49024767779724 }) => {\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [mapReady, setMapReady] = useState(false);\n\n  useEffect(() => {\n    if (!mapInstanceRef.current && mapContainerRef.current) {\n      // Set the map center to the initial coordinates (Hyderabad, Telangana in this case)\n      mapInstanceRef.current = L.map(mapContainerRef.current, {\n        center: [initialLatitude, initialLongitude],\n        zoom: 13,\n        maxZoom: 18,\n      });\n\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors',\n      }).addTo(mapInstanceRef.current);\n\n      // Create a custom red icon for the marker\n      const customIcon = L.icon({\n        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41],\n      });\n\n      // Add marker at initial coordinates\n      markerRef.current = L.marker([initialLatitude, initialLongitude], { draggable: true, icon: customIcon })\n        .addTo(mapInstanceRef.current)\n        .on('dragend', updateMarkerPosition);\n\n      // Handle map click to move the marker\n      mapInstanceRef.current.on('click', (e) => {\n        const { lat, lng } = e.latlng;\n        if (markerRef.current) {\n          markerRef.current.setLatLng([lat, lng]);\n          updateMarkerPosition();\n        }\n      });\n\n      const resizeMap = () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.invalidateSize();\n        }\n      };\n\n      setTimeout(() => {\n        resizeMap();\n        setMapReady(true);\n      }, 100);\n\n      window.addEventListener('resize', resizeMap);\n\n      return () => {\n        window.removeEventListener('resize', resizeMap);\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.remove();\n          mapInstanceRef.current = null;\n        }\n      };\n    }\n  }, [onLocationSelect]);\n\n  const updateMarkerPosition = () => {\n    if (markerRef.current) {\n      const position = markerRef.current.getLatLng();\n      onLocationSelect(position.lat, position.lng);\n    }\n  };\n\n  return <div ref={mapContainerRef} className=\"interactive-map\" />;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}